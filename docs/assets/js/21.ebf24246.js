(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{427:function(a,t,v){"use strict";v.r(t);var _=v(2),r=Object(_.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("从JDK 8到JDK 17，Java平台引入了许多新特性和改进。以下是其中一些主要的新特性：")]),a._v(" "),t("h3",{attrs:{id:"jdk-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-9"}},[a._v("#")]),a._v(" JDK 9:")]),a._v(" "),t("ol",[t("li",[a._v("模块系统（Java Platform Module System，JPMS）：引入了一种新的组织和部署Java代码的方式，以提高可靠性和安全性。")]),a._v(" "),t("li",[a._v("JShell：一种交互式的Java编程环境，可以在其中直接编写和执行Java代码片段。")]),a._v(" "),t("li",[a._v("私有接口方法：接口可以包含私有的方法，这些方法可以被接口中的其他方法调用。")])]),a._v(" "),t("h3",{attrs:{id:"jdk-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-10"}},[a._v("#")]),a._v(" JDK 10:")]),a._v(" "),t("ol",[t("li",[a._v("局部变量类型推断：引入了var关键字，可以根据变量的初始化值进行类型推断，从而简化代码编写。")]),a._v(" "),t("li",[a._v("应用类数据共享（Application Class-Data Sharing）：通过在JVM启动时共享类元数据和字节码，提高了应用程序的启动时间和内存利用率。")])]),a._v(" "),t("h3",{attrs:{id:"jdk-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-11"}},[a._v("#")]),a._v(" JDK 11:")]),a._v(" "),t("ol",[t("li",[a._v("HTTP客户端：引入了标准的HTTP客户端API，以便于进行HTTP通信。")]),a._v(" "),t("li",[a._v("单文件执行程序：可以直接将Java应用程序打包为可执行的单个文件。")]),a._v(" "),t("li",[a._v("长期支持（LTS）版本：JDK 11成为了Java平台的长期支持版本，获得了长期的技术支持和更新。")])]),a._v(" "),t("h3",{attrs:{id:"jdk-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-12"}},[a._v("#")]),a._v(" JDK 12:")]),a._v(" "),t("ol",[t("li",[a._v("微基准测试套件：引入了Microbenchmark套件，可以方便地进行Java应用程序的微基准测试。")]),a._v(" "),t("li",[a._v("Shenandoah垃圾收集器（Shenandoah Garbage Collector）：一种低暂停时间的垃圾收集器，适用于大内存堆环境。")])]),a._v(" "),t("h3",{attrs:{id:"jdk-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-13"}},[a._v("#")]),a._v(" JDK 13:")]),a._v(" "),t("ol",[t("li",[a._v("文本块：引入了文本块语法，使得多行字符串的定义更加简洁易读。")]),a._v(" "),t("li",[a._v("动态CDS归档（Dynamic CDS Archives）：允许在运行时生成类数据共享（CDS）档案文件。")])]),a._v(" "),t("h3",{attrs:{id:"jdk-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-14"}},[a._v("#")]),a._v(" JDK 14:")]),a._v(" "),t("ol",[t("li",[a._v("switch表达式增强：switch语句可以作为表达式使用，从而可以更简洁地编写代码。")]),a._v(" "),t("li",[a._v("Records：引入了记录（Record）类，用于声明不可变的数据传输对象。")])]),a._v(" "),t("h3",{attrs:{id:"jdk-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-15"}},[a._v("#")]),a._v(" JDK 15:")]),a._v(" "),t("ol",[t("li",[a._v("Sealed类和接口：引入了受限的类和接口，用于控制哪些类可以继承或实现它们。")]),a._v(" "),t("li",[a._v("Pattern匹配：增强了instanceof运算符，使其可以直接获取匹配对象的成员。")])]),a._v(" "),t("h3",{attrs:{id:"jdk-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-16"}},[a._v("#")]),a._v(" JDK 16:")]),a._v(" "),t("ol",[t("li",[a._v("引入了一些改进的GC算法和垃圾收集器接口，如ZGC、Epsilon等。")])]),a._v(" "),t("h3",{attrs:{id:"jdk-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-17"}},[a._v("#")]),a._v(" JDK 17:")]),a._v(" "),t("ol",[t("li",[a._v("Sealed类和接口的扩展：引入了可以在模块之间扩展受限类和接口的机制。")]),a._v(" "),t("li",[a._v("基于x86的64位平台上的向量API：提供了一组类和操作符，用于执行向量计算。")]),a._v(" "),t("li",[a._v("垃圾收集器接口增强：增加了新的垃圾收集器接口和功能。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);